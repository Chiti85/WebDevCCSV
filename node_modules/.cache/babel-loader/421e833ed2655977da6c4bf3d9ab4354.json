{"ast":null,"code":"var _jsxFileName = \"/Users/f.deutges/Desktop/CodingChallengeSV/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport result from './data.json';\nimport InputField from './InputField';\nimport SearchButton from './SearchButton';\nimport ShowResults from './ShowResults';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputSphere: 0,\n      results: []\n    };\n\n    this.componentDidMount = () => {\n      // this.setState({results:result})\n      console.log(result);\n    };\n\n    this.filterResults = inputSphere => {\n      //filter here\n      this.setState({\n        results: result\n      });\n    };\n\n    this.onSearch = () => {\n      //make the button trigger the filter function\n      console.log(\"to be done\");\n    };\n\n    this.onChange = (key, value) => {\n      this.setState({\n        [key]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"hello\", React.createElement(InputField, {\n      inputField: this.state.inputSphere,\n      name: \"inputSphere\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(SearchButton, {\n      onSearch: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(ShowResults, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; //make all results appear in the moment the page opens\n//make the results not filter on every mouseclick but on every button click\n//filter the results based on the input fields\n//add 2 more inputFields, inputCylinder and inputAddition","map":{"version":3,"sources":["/Users/f.deutges/Desktop/CodingChallengeSV/src/App.js"],"names":["React","result","InputField","SearchButton","ShowResults","App","Component","state","inputSphere","results","componentDidMount","console","log","filterResults","setState","onSearch","onChange","key","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GAC1B;AACJC,MAAAA,WAAW,EAAC,CADR;AAEJC,MAAAA,OAAO,EAAC;AAFJ,KAD0B;;AAAA,SAKhCC,iBALgC,GAKd,MAAI;AACpB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACD,KAR+B;;AAAA,SAShCY,aATgC,GASjBL,WAAD,IAAe;AAC3B;AACA,WAAKM,QAAL,CAAc;AAACL,QAAAA,OAAO,EAACR;AAAT,OAAd;AACD,KAZ+B;;AAAA,SAahCc,QAbgC,GAavB,MAAI;AACX;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAhB+B;;AAAA,SAiBhCI,QAjBgC,GAiBvB,CAACC,GAAD,EAAKC,KAAL,KAAa;AACpB,WAAKJ,QAAL,CAAc;AAAC,SAACG,GAAD,GAAMC;AAAP,OAAd;AACD,KAnB+B;AAAA;;AAoBhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWC,WADzB;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,QAAQ,EAAE,KAAKQ,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KAAKD,QADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAUE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWE,OADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAgBD;;AArC+B;;AAwClC,eAAeJ,GAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './App.css';\nimport result from './data.json'\nimport InputField from './InputField'\nimport SearchButton from './SearchButton'\nimport ShowResults from './ShowResults'\n\nclass App extends React.Component {\n  state={\n    inputSphere:0,\n    results:[]\n  }\n  componentDidMount=()=>{\n    // this.setState({results:result})\n    console.log(result)\n  }\n  filterResults=(inputSphere)=>{\n    //filter here\n    this.setState({results:result})\n  }\n  onSearch=()=>{\n    //make the button trigger the filter function\n    console.log(\"to be done\")\n  }\n  onChange=(key,value)=>{\n    this.setState({[key]:value})\n  }\n  render (){\n    return(\n      <div>\n        hello\n        <InputField\n          inputField={this.state.inputSphere}\n          name=\"inputSphere\"\n          onChange={this.onChange}\n        />\n        <SearchButton\n          onSearch={this.onSearch}\n        />\n        <ShowResults\n          results={this.state.results}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n//make all results appear in the moment the page opens\n//make the results not filter on every mouseclick but on every button click\n//filter the results based on the input fields\n//add 2 more inputFields, inputCylinder and inputAddition\n"]},"metadata":{},"sourceType":"module"}